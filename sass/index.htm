<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>

<body>
    <!-- 实时监听style文件夹下的变化：sass --watch style:css --style expannded -->
    <!--先实时监听，然后在开始选择css的输出格式即可-->
    css的输出格式：
    嵌套输出：style/index.scss:css/index.css --style nested
    展开输出：style/index.scss:css/index.css --style expanded
    紧凑输出：style/index.scss:css/index.css --style compact
    压缩输出：style/index.scss:css/index.css --style compressed
    /*!jsj */ -->强制注释，无论什么格式都能够打印出来
    <!--
        #div1 {
            color: $color;  ---》变量名---》方便集中修改

            .p1 {
                border: 1px solid $color;
            }

            &:hover { ---》谁需要hover就在谁的选择器里&:hover
                &---》代表的是上一级的选择器
                background-color: $color;
            }
        }
        属性嵌套:只要是属性可以横线连接的就都可以嵌套
    -->

    <!-- 
        属性利用变量的引用
        /*定义一个变量*/
        $val1:width;

        #div5 {
            #{$val1}: 10px;
        }
    -->

    <!--
        引入外部文件：@import "文件名"
        继承和import
        #div8 {
            /*div8继承div7*/
            @extend #div7;
            background-color: #000;
        }

        /*引入外部文件*/
        @import "main";
    -->

    <!--
        属性的只可以通过计算得到：加减至少有一个px；乘除只能有一个px，且除法的px必须放在前面
            #div9 {
                /*可以计算*/
                width: 5px+5px;
                /*5px+5也可以，即这至少有一个像素*/
                font-size: 2*10px;
                /*乘法只能写一个px*/
                border-width: (100px/10);
                /*只能有一个px，而且必须是前面的有px*/
            }
    -->

    <!--
        混合式引用--》类似于函数，可传参，设置默认值
        @mixin mm($h, $w:10px) {
            width: $w;
            height: $h;
            background-color: red;
        }

        #div6 {
            /*引用名字*/
            /*只传了一个参数*/
            @include mm($h:200px)
        }
    -->

    <!--
        字符串：
            字符串的拼接：+
            大小写转换：to-upper-case($val),to-lower-case($var)
            字符串的长度：str-length($var)
            索引1开始：str-index($target,$str)
            插入：str-insert($var,$inserStr,index)
    -->

    <!--
        颜色：
            rgb()  rgba()
            更浅：lighten($color,20%)
            更深：darken($color,20%)
            更不透明：opacify($color,0.3)
            更透明：transparentsize($color,0.3)
    -->

    <!--
        列表：
            列表长度：length(5px 10px)
            返回索引：index(1px sold #000,solid) --》取出solid的位置
            取出索引对应的值：nth(5px 10px,2) --》10px
            列表后面追加值：append(5px 5px,10px) --》(5px 5px 10px)
            合并列表：join(5px 5px,10px 10px,comma) --》comma表示用逗号分隔
    -->
</body>

</html>