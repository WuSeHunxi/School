<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>

<body>
    <script>
        var arr = new Array();
        arr.push(9);
        console.log(arr);

        //继承
        // function Person() {
        //     this.name = "xiao";
        //     this.age = 10;
        //     this.showName = function () {
        //         console.log(this.name);
        //     }
        // }
        // let per = new Person();
        // console.log(per);

        // function Student() {
        // //使用call()改变this指向 ==>构造继承
        //     Person.call(this); //把原来Person的this改成Student的this
        // }
        // let stu = new Student();
        // console.log(stu.age);
        // stu.showName();

        //原型继承
        function Person() {
            this.name = "xiao";
            this.age = 10;
        }
        Person.prototype.showName = function () {
            console.log(this.name);
        }

        function Student() {

        }
        Student.prototype = new Person();
        let stu = new Student();
        stu.showName();

        //组合继承
        function Person() {
            this.name = "xiao";
            this.age = 10;
        }
        Person.prototype.showName = function () {
            console.log(this.name);
        }

        function Student() {
            Person.call(this);
        }
        Student.prototype = new Person();
        let stu1 = new Student();
        stu.showName();
        console.log(Student.prototype.constructor);
        //对于67行的结果不满意，要将Student的构造函数指向自己，因此需要进行下方的修改
        Student.prototype.constructor = Student;
        console.log(Student.prototype.constructor);
    </script>
</body>

</html>